[project]
name = "drone_estimators"
version = "0.0.1"
description = "TODO"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
]

dependencies = [
    "jax",
    "numpy>=2.0",
    # "scipy @ git+https://github.com/scipy/scipy.git",                  # TODO: Replace with scipy 1.17 once released
    "drone-models @ git+https://github.com/utiasDSL/drone-models.git", # TODO: Replace with pip version once released
    "munch",
    "transforms3d",
    "flax",
    "array-api-compat",
    "array-api-typing @ git+https://github.com/data-apis/array-api-typing", # TODO: Replace with array-api-typing from pip once released
    "array-api-extra",
]

[project.optional-dependencies]
test = ["pytest>=8.0.0", "pytest-cov", "pytest-timeout", "torch"]

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
drone_estimators = [
    "ros_nodes/*.toml",
]

[tool.pytest.ini_options]
markers = ["unit", "integration", "render"]
addopts = "-m 'not render'"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
    "docs/conf.py",
    "plot.py",
]

line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D", "TCH", "ANN"]
ignore = ["ANN401", "ANN101"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"benchmark/*" = ["D100", "D103"]
"tests/*" = ["D100", "D103", "D104"]
"examples/*" = ["D100", "D103"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

# [tool.pixi.workspace]
# channels = ["conda-forge"]
# platforms = ["linux-64"]

# [tool.pixi.pypi-dependencies]
# drone-estimators = { path = "./", editable = true }

# [tool.pixi.feature.tests.dependencies]
# pytest = ">=8.4.1"
# pytest-timeout = ">=2.1.0"

# [tool.pixi.feature.tests.tasks]
# tests = { cmd = "pytest -v tests", description = "Run tests" }

# [tool.pixi.feature.docs.dependencies]
# mkdocs = ">=1.5.0"
# mkdocs-material = ">=9.0.0"
# python = ">=3.10"

# [tool.pixi.feature.docs.pypi-dependencies]
# mkdocs-autorefs = ">=1.2.0"
# mkdocstrings = { extras = ["python"], version = ">=0.26.0" }
# mkdocs-gen-files = ">=0.5.0"
# mkdocs-literate-nav = ">=0.6.0"
# mkdocs-section-index = ">=0.3.0"

# [tool.pixi.feature.docs.tasks]
# docs-serve = { cmd = "mkdocs serve", description = "Serve docs locally" }
# docs-build = { cmd = "mkdocs build", description = "Build docs" }

# [tool.pixi.environments]
# default = { solve-group = "default" }
# tests = { features = ["tests"], solve-group = "default" }
# docs = { features = ["docs"], solve-group = "default" }

# [tool.pixi.dependencies]
# # TODO: Remove compilers once scipy 1.17 is released and drone-models have been updated.
# gcc = ">=15.1.0,<15.2"
# cxx-compiler = ">=1.0.0,<2"
# gfortran = ">=15.1.0,<15.2"
# openblas = ">=0.3.30,<0.4"
# ruff = "*"
